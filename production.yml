version: "3"

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}

services:
  portfolio:
    image: djangoreactdev/portfolio:1.3

  portfolio-sanity:
    image: djangoreactdev/portfolio-sanity:1.3

  wow-effecting:
    image: djangoreactdev/wow-effecting:1.0

################################Cosmetic##################################

  cosmetic-api:
    image: djangoreactdev/cosmetic-api:1.0.2
    depends_on:
      - postgres
      - redis
    env_file:
      - ./cosmetic/.envs/.production/.django
      - ./cosmetic/.envs/.production/.postgres
    command: /start

  postgres:
    image: cosmetic_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./cosmetic/.envs/.production/.postgres

  redis:
    image: redis:6

  awscli:
    image: cosmetic_production_awscli
    env_file:
      - ./cosmetic/.envs/.production/.django
    volumes:
      - production_postgres_data_backups:/backups:z
    networks:
      - default

  cosmetic-front:
    image: djangoreactdev/cosmetic-front:1.0
    command: npm start
    depends_on:
      - cosmetic-api
    environment:
      NODE_ENV: production
    # user: root

  cosmetic-dashboard:
    image: djangoreactdev/cosmetic-dashboard:1.0
    command: npm start
    depends_on:
      - cosmetic-api
    environment:
      NODE_ENV: production
    # user: root

################################Codehelp##################################





  traefik:
    image: production_traefik:1.1
    depends_on:
      - portfolio
    volumes:
      - production_traefik:/etc/traefik/acme
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"

# networks:
#   production_bridge:
#     external: true

# networks:
#   default:
#     external:
#       name: production_default
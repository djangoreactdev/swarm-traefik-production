version: "3"

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}

  codehelp_django_media: {}
  codehelp_django_static: {}
  codehelp_client_static: {}

services:
  portfolio:
    image: djangoreactdev/portfolio:1.3

  portfolio-sanity:
    image: djangoreactdev/portfolio-sanity:1.3

  wow-effecting:
    image: djangoreactdev/wow-effecting:1.0

################################Cosmetic##################################

  cosmetic-api:
    image: djangoreactdev/cosmetic-api:1.0.2
    depends_on:
      - postgres
      - redis
    env_file:
      - ./cosmetic/.envs/.production/.django
      - ./cosmetic/.envs/.production/.postgres
    command: /cosmetic/compose/production/django/start

  postgres:
    build:
      context: ./cosmetic
      dockerfile: ./compose/production/postgres/Dockerfile
    image: cosmetic_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./cosmetic/.envs/.production/.postgres
      - ./codehelp/.envs/.production/.postgres

  awscli:
    build:
      context: ./cosmetic
      dockerfile: ./compose/production/aws/Dockerfile
    image: cosmetic_production_awscli
    env_file:
      - ./cosmetic/.envs/.production/.django
    volumes:
      - production_postgres_data_backups:/backups:z

  redis:
    image: redis:6

  cosmetic-front:
    image: djangoreactdev/cosmetic-front:1.0
    command: npm start
    depends_on:
      - cosmetic-api
    environment:
      NODE_ENV: production
    # user: root

  cosmetic-dashboard:
    image: djangoreactdev/cosmetic-dashboard:1.0
    command: npm start
    depends_on:
      - cosmetic-api
    environment:
      NODE_ENV: production
    # user: root

################################Codehelp##################################

  codehelp-api:
    container_name: codehelp-api
    image: djangoreactdev/codehelp-api:1.0.0
    volumes:
      - production_django_media:/app/codehelp/media
    depends_on:
      - postgres
    env_file:
      - ./codehelp/.envs/.production/.django
      - ./codehelp/.envs/.production/.postgres
    command: /codehelp/compose/production/django/start

  codehelp-front:
    image: djangoreactdev/codehelp-front:1.0.1
    volumes:
        - ./client:/app
        - /app/node_modules
        - production_django_media:/usr/share/nginx/media:ro
        - production_django_static:/usr/share/nginx/static:ro
        - production_client_static:/usr/share/nginx/html:ro
    depends_on:
      - codehelp-api


  traefik:
    build:
      context: .
      dockerfile: ./traefik/Dockerfile
    image: production_traefik:1.1
    depends_on:
      - portfolio
    volumes:
      - production_traefik:/etc/traefik/acme
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
